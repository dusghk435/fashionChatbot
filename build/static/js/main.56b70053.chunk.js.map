{"version":3,"sources":["logo.svg","Chatbot/config.js","Chatbot/ActionProvider.js","Chatbot/MessageParser.js","App.js","reportWebVitals.js","index.js"],"names":["config","botname","initialMessages","createChatBotMessage","ActionProvider","setStateFunc","createClientMessage","greet","message","addMessageToState","setState","prevState","messages","this","MessageParser","actionProvider","state","console","log","toLowerCase","includes","App","className","messageParser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,I,YCOAA,EALA,CACXC,QAAS,aACXC,gBAAiB,CAACC,+BAAqB,a,qBCgBxBC,EAnBb,WAAYD,EAAsBE,EAAcC,GAAsB,IAAD,gCAMrEC,MAAQ,WACJ,IAAMC,EAAU,EAAKL,qBAAqB,iBAC1C,EAAKM,kBAAkBD,IAR0C,KAWrEC,kBAAoB,SAACD,GACjB,EAAKE,UAAS,SAACC,GAAD,mBAAC,eACRA,GADO,IAEVC,SAAS,GAAD,mBAAMD,EAAUC,UAAhB,CAA0BJ,UAbxCK,KAAKV,qBAAuBA,EAC5BU,KAAKH,SAAWL,EAChBQ,KAAKP,oBAAsBA,G,OCYhBQ,E,WAfb,WAAYC,EAAgBC,GAAQ,oBAClCH,KAAKE,eAAiBA,EACtBF,KAAKG,MAAQA,E,yCAGf,SAAMR,GACJS,QAAQC,IAAIV,GACMA,EAAQW,cAEbC,SAAS,UAClBP,KAAKE,eAAeR,Y,YCWfc,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,8BACE,cAAC,UAAD,CACAtB,OAAQA,EACRe,eAAgBX,EAChBmB,cAAiBT,SCHVU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.56b70053.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nconst config = {\r\n    botname: \"fashionBot\",\r\n  initialMessages: [createChatBotMessage(`Hello!~`)]\r\n}\r\n\r\nexport default config","class ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n      this.createClientMessage = createClientMessage;\r\n    }\r\n\r\n    greet = () => {\r\n        const message = this.createChatBotMessage(\"Hello friend.\");\r\n        this.addMessageToState(message);\r\n    }\r\n\r\n    addMessageToState = (message) => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            messages: [...prevState.messages, message],\r\n        }));\r\n    };\r\n  }\r\n  \r\n  export default ActionProvider;","class MessageParser {\r\n    constructor(actionProvider, state) {\r\n      this.actionProvider = actionProvider;\r\n      this.state = state;\r\n    }\r\n  \r\n    parse(message) {\r\n      console.log(message)\r\n      const lowercase = message.toLowerCase();\r\n    \r\n      if(lowercase.includes(\"hello\")) {\r\n          this.actionProvider.greet();\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default MessageParser;","import logo from './logo.svg';\nimport './App.css';\nimport {Chatbot} from 'react-chatbot-kit'\n\nimport config from './Chatbot/config';\nimport ActionProvider from './Chatbot/ActionProvider';\nimport MessageParser from './Chatbot/MessageParser';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Chatbot\n        config={config}\n        actionProvider={ActionProvider}\n        messageParser = {MessageParser}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}